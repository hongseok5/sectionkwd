<!DOCTYPE html>
<html>
  <head>

    <link rel='stylesheet' href='/Bootstrap-3.3.7/css/bootstrap.css' />
    <link rel='stylesheet' href='/Bootstrap-3.3.7/css/bootstrap-treeview.min.css' />
    <link rel='stylesheet' href='/stylesheets/jquery-ui.css' />
    <link rel='stylesheet' href='/stylesheets/tabulator_bootstrap.min.css' />
    <script type="text/javascript" src="/javascripts/commonUtil.js"></script>
    <script type="text/javascript" src="/javascripts/tabulator.min.js"></script>
    <script type="text/javascript" src="/javascripts/xlsx.full.min.js"></script>
    <script type="text/javascript" src="/jQuery-3.3.1/jquery-3.3.1.js"></script>
    <script type="text/javascript" src="/Bootstrap-3.3.7/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="/jQuery-3.3.1/jquery-ui.min.js"></script>
    <script type="text/javascript" src="/Bootstrap-3.3.7/js/bootstrap-treeview.min.js"></script>
    <style>

    </style>
    <script>
      // 카테고리 페이지에서 넘어왔을때
      var category1 = '<%= cate1 %>' || false 
      var category2 = '<%= cate2 %>' || false
      const ctx = "http://localhost:3000"
      var ajaxURL; 

      // GET으로 파라미터 전달
      if( common.isEmpty(category1) && common.isEmpty(category2) ){
        ajaxURL = ctx + "/keywords/getTableData"
      } else if( common.isEmpty(category1) && !common.isEmpty(category2) ){
        ajaxURL = ctx + "/keywords/getTableData?category1=" + category1
      } else if( !common.isEmpty(category1) && !common.isEmpty(category2) ){
        ajaxURL = ctx + "/keywords/getTableData?category1=" + category1 + "&category2=" + category2
      } else {
        console.log("Exception")
        ajaxURL = ctx + "/keywords/getTableData"
      }
      // 테이블 객체 선언
      var ctable;
      // 카테고리 트리 데이터
      var cateTree = "<%= JSON.stringify(cateTree) %>".replace(/&#34;/gi,'"') 
      // 테이블의 [보기] 버튼 렌더링 함수
      var btnExample = ( cell, formatterparams, onRendered ) => {
        return `<button type='button' onclick='showPopup("${cell.getRow().getData().keyword}")'>보기</button>`
      }
      // 테이블의 체크박스 렌더링 함수
      var printChk = (cell, formatterParams, onRendered) => "<input type='checkbox'>" 
      // 보기 버튼 클릭시 데이터 조회 후 팝업 호출

      // 저장 버튼 클릭시 신규/수정 데이터만 필터링 하여 서버에 요청 
      var insertData = ( dataArray ) => {
        if( dataArray !== undefined && dataArray.length < 1){
          console.log("No updating data")
        } else {
          $.ajax({
            url : ctx + "/category/insertData",
            type : "POST",
            data : JSON.stringify(dataArray),
            contentType : "application/json",
            // dataType : "text",
            error : function(e){
              console.log(e)
            },
            success : function( response ){
              if(response == "OK"){
                ctable.setData();
              } else {
                alert("not successful")
              }
            }
          })
        }
      }

      var checkUpload = function(){
        var fileCheck = document.getElementById("dfile").value;
        if(!fileCheck){
          alert("파일을 첨부하세요")
          return false
        } else {
          return true
        }
      }


      // 카테고리 트리의 카테고리 선택시 데이터 조회하는 함수
      var loadData = (data) => {
        var category1;
        var category2;
        if(data.nodes !== undefined){
            category1 = data.text
        } else {
            if(data.parentId !== undefined){
                category1 = $("#tree > ul > li[data-nodeid=" + data.parentId+ "]").text()
                category2 = data.text
            } else {
                category1 = data.text
            }
        } 
        var url = ctx + "/keywords/getTableData?"
        if(category1 !== undefined && category2 === undefined){
          // 카테고리 트리의 카운트 값을 잘라내고 전달
          //ctable.setData(url + "category1=" + category1.substr(0, category1.indexOf(' ('))) 
          ctable.setData(url + "category1=" + category1)
        } else if(category1 !== undefined && category2 !== undefined){
          //ctable.setData(url + "category1=" + category1.substr(0, category1.indexOf(' (')) + "&category2=" + category2.substr(0, category2.indexOf(' ('))) 
          ctable.setData(`${url}category1=${category1}&category2=${category2}`)
        } else {
          ctable.setData() 
        }
      }

      $(document).ready( function(){

        // 테이블 생성
        ctable = new Tabulator("#tb_keywords", {
          //columnHeaderAlign:"center",
          //maxHeight: "100%",
          ajaxURL : ajaxURL,
          //ajaxParams : { size : "1" },
          ajaxConfig : "GET",
          layout : "fitData",
          columns : [
            {title : "<input type='checkbox'>", field : "checkbox" , hozAlign:"center", formatter:printChk },
            {title : "esID", field : "isNew", hozAlign:"center", visible: false },
            {title : "대분류", width: 100, field : "category1", hozAlign:"center", visible: false },
            {title : "중분류", width: 300, field : "category2", hozAlign:"center", visible: false },
            {title : "키워드", width: 120, field : "keyword", editor: "input", hozAlign:"center", formatterParams : {add : false} },
            {title : "동의어", width: 220, field : "synonyms", editor: "input", hozAlign:"center" },
            {title : "연관어1", width: 220, field : "rekeywords", editor: "input", hozAlign:"center" },
            {title : "연관어2", width: 220, field : "rhkeywords", editor: "input", hozAlign:"center" },
            {title : "오류키워드", width: 220, field : "typos", editor: "input", hozAlign:"center", formatterParams : {add : false} },
            //{title : "예시", width: 70, formatter: btnExample, hozAlign:"center" },
            {title : "삭제", field : "tbutton", hozAlign:"center", width: 70 , formatter: "buttonCross" },
            {title : "신규여부", field : "isNew", hozAlign:"center", visible: false },
            {title : "수정여부", field : "isEdited", hozAlign:"center", visible: false },
          ],

          pagination : "local",
          placeholder:"No Data Available", //display message to user on empty table
          paginationSize : 20,
          //height : "500px",
          // width : "300px",
          cellEdited : function(cell){
            var rowData = cell.getRow().getData();
            if(rowData.isNew !== "Y"){
              rowData.isEdited = "Y"
            }           
          }
        })

        // 행 추가 이벤트
        document.getElementById("addRow").addEventListener("click", function(){
          ctable.addData([{  count: 0 , isNew : "Y"}], true); // default 는 false이고 true이면 행이 위에 생긴다.
        });

        // 저장버튼 클릭 이벤트 
        document.getElementById("updateData").addEventListener("click", function(){
          var data = ctable.getData();

          var udata = data.filter( v => v.isNew === "Y" || v.isEdited === "Y" )                                                                                                                                  
          insertData(udata)  
        });

        // 엑셀 다운로드 버튼 클릭 이벤트 - 정확한 정의가 필요
        document.getElementById("excelDownload").addEventListener("click", function(){
          ctable.deleteColumn("checkbox");
          ctable.deleteColumn("tbutton");
          ctable.download('xlsx', 'data.xlsx', {sheetName:"data"});
          location.reload(true)
        });
        // 엑셀 업로드 버튼 클릭 이벤트 - form을 팝업으로 띄워서 업로드 한다.
        document.getElementById("excelUpload").addEventListener("click", function(){
          $('#keywordExample').modal("show")
        });

        // 검색 버튼 클릭 이벤트
        document.getElementById("btnSearch").addEventListener("click", function(){
          var params = {
            //category1 ,
            //category2 ,
            synonym : $('#synonymYn option:selected').val(),
            relative : $('#relativeYn option:selected').val(),
            typo :    $('#typoYn option:selected').val()
          }

          if($("#searchKwd").val() !== "" ){
            params.keyword = $("#searchKwd").val()
          }
          ajaxURL = `${ctx}/keywords/getTableData?${$.param(params)}`
          ctable.setData(ajaxURL)
        });

        // 팝업 닫을 때 이벤트 버튼
        $('#keywordExample').on('hidden.bs.modal', function (e) {
          //console.log(e)
          $("#keywordHighlight > li").remove();
        })

        // 카테고리 트리 그리는 함수
        $('#tree').treeview({
            data : cateTree,
            onNodeSelected : function( event, data ){
              loadData(data)
            }
        });

        // 트리를 그리고 나서 중분류는 감추는 함수.
        $('#tree').treeview('collapseAll', { silent: true });

      });

    </script>
  </head>
  <body>
    <% include ./index %>
    <div class="row">
      <div class="col-md-2">
        <h4 style="margin-top: 30px; text-align: center; " > 카테고리 </h4>
        <div id="tree"></div>
      </div>
      <div class="col-md-8">
        <h4 style="margin-top: 30px; margin-bottom: 30px;text-align: center;" > 키워드 목록 </h4>
        <div style="padding: 50px 50px 50px 100px;">
          <form>
            <div style="margin:30px;">
              <span style="margin:20px">
              <label for="">대분류</label>
              <select id="">
                  <option value="A">전체</option>
                  <option value="Y"> Y </option>
                  <option value="N"> N </option>
              </select>
              </span>
              <span style="margin:20px">
              <label for="">중분류</label>
              <select id="">
                  <option value="A">전체</option>
                  <option value="Y"> Y </option>
                  <option value="N"> N </option>
              </select>
              </span>
            </div>
            
            <div style="margin:30px;">
              <span style="margin:20px">
              <label for="synonymYn">동의어존재</label>
              <select id="synonymYn">
                  <option value="A">전체</option>
                  <option value="Y"> Y </option>
                  <option value="N"> N </option>
              </select>
              </span>
              <span style="margin:20px">
              <label for="relativeYn">연관어존재</label>
              <select id="relativeYn">
                  <option value="A">전체</option>
                  <option value="Y"> Y </option>
                  <option value="N"> N </option>
              </select>
              </span>
              <span style="margin:20px">
              <label for="typoYn">오류어존재</label>
              <select id="typoYn">
                  <option value="A">전체</option>
                  <option value="Y"> Y </option>
                  <option value="N"> N </option>
              </select>
              </span>
            </div>
            <input type="text" id="searchKwd"> 
            <button id="btnSearch" type="button" class="btn btn-light">검색</button>
          </form>
        </div>

        <h4>
          <button class="btn btn-default" id="updateData"> 저장 </button>
          <button class="btn btn-warning" id="addRow"> 추가 </button>
          <button class="btn btn-success" id="excelDownload"> 엑셀다운로드 </button>
          <button class="btn btn-success" id="excelUpload"> 엑셀업로드 </button>
        </h4>
        <div id="tb_keywords" class="table-bordered">
          <!-- 타뷸레이터 테이블 생성 -->
        </div>
      </div>
      <div class="col-md-2">
        <div class="modal" tabindex="-1" role="dialog" id="keywordExample">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title"> 파일 업로드 </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="uploadForm" action="/keywords/uploadForm" method="post" enctype="multipart/form-data" onsubmit="return checkUpload()">
                  <label for="exampleFormControlFile1"> 업로드할 파일을 선택하세요 </label>
                  <input type="file" name="file" class="form-control-file" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" id="dfile">
                  <!--
                    <input type="file" accept="application/vnd.ms-excel" />
                  -->
                  <br>
                  <input type="submit" value="업로드">
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

  </body>
</html>
